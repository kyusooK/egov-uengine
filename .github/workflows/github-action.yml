name: CI to Docker Hub

on:
  push:
    branches: [ main ]

env:
  DOCKERHUB_USERNAME: kimkyusoo
  DOCKERHUB_PASSWORD: Rlarbtn135!

jobs:
  accident-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Build and push Order Service Docker image
        run: |
          cd accident
          mvn clean package -DskipTests
          docker build . -t ${{ env.DOCKERHUB_USERNAME }}/accident:latest
          docker push ${{ env.DOCKERHUB_USERNAME }}/accident:latest
  
  assessment-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Build and push Order Service Docker image
        run: |
          cd assessment
          mvn clean package -DskipTests
          docker build . -t ${{ env.DOCKERHUB_USERNAME }}/assessment:latest
          docker push ${{ env.DOCKERHUB_USERNAME }}/assessment:latest

  compensation-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Build and push Order Service Docker image
        run: |
          cd compensation
          mvn clean package -DskipTests
          docker build . -t ${{ env.DOCKERHUB_USERNAME }}/compensation:latest
          docker push ${{ env.DOCKERHUB_USERNAME }}/compensation:latest